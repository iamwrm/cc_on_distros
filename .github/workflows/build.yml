name: CI

on: push

env:
  IMAGE_REGISTRY: "ghcr.io"
  REGISTRY_USER: "${{ github.repository_owner }}"
  REGISTRY_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
  IMAGE_REPO: "ghcr.io/${{ github.repository_owner }}"
  IMAGE_NAME: "cc_on_distros"

jobs:
  build:
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu_2004", "centos_7"]
        cc_name: [gcc, dpcpp]


    steps:
      - uses: actions/checkout@v2

      - name: Show basic system info
        run: |
          uname -a
          lscpu
          free -h
          df -h
          ip a
          ls
          pwd
          ls /etc/*release

      - name: Docker build
        run: |
          WORKDIR=${PWD}
          cd ci/distros/${{ matrix.os }}
          cp ${WORKDIR}/ci/${{ matrix.cc_name }}/entry.sh .
          docker build -t ${{ env.IMAGE_REPO }}/${{ env.IMAGE_NAME }}:${{ matrix.os }}_${{ matrix.cc_name }} .

      # - uses: actions/upload-artifact@v2
      #   with:
      #     name: gcc-${{ matrix.gcc_version }}-build
      #     path: gcc-${{ matrix.gcc_version }}-build.tar.gz

      # - name: Login docker
      #   run: |
      #     echo ${{ env.REGISTRY_TOKEN }} | docker login ${{ env.IMAGE_REGISTRY }} -u ${{ env.REGISTRY_USER }} --password-stdin

      # - name: Docker build
      #   run: |
      #     docker build -t ${{ env.IMAGE_REPO }}/${{ env.IMAGE_NAME }}:${{ matrix.gcc_version }} .

      # - name: Push docker image
      #   run: |
      #     docker push ${{ env.IMAGE_REPO }}/${{ env.IMAGE_NAME }}:${{ matrix.gcc_version }}

      # - name: Test docker image
      #   run: |
      #     ## toolchain/bin/gcc has issue, try ls and try abs path
      #     ##
      #     docker run --rm ${{ env.IMAGE_REPO }}/${{ env.IMAGE_NAME }}:${{ matrix.gcc_version }} pwd
      #     docker run --rm ${{ env.IMAGE_REPO }}/${{ env.IMAGE_NAME }}:${{ matrix.gcc_version }} ls /root
      #     docker run --rm ${{ env.IMAGE_REPO }}/${{ env.IMAGE_NAME }}:${{ matrix.gcc_version }} /root/toolchains/bin/gcc --version
